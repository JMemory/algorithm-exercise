<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置整合mybatis过程-->
    <!-- 1: 配置数据库相关参数  properties的属性:${url}-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2:数据库连接池-->
    <bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClass" value="${master.driver}"/>
        <property name="jdbcUrl" value="${master.url}"/>
        <property name="user" value="${master.user}"/>
        <property name="password" value="${master.password}" />

        <!-- c3po连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间-->
        <property name="checkoutTimeout" value="20000"/>
        <!-- 获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="3"/>
    </bean>

    <bean id="salveDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClass" value="${salve.driver}"/>
        <property name="jdbcUrl" value="${salve.url}"/>
        <property name="user" value="${salve.user}"/>
        <property name="password" value="${salve.password}" />

        <!-- c3po连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间-->
        <property name="checkoutTimeout" value="20000"/>
        <!-- 获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="3"/>
    </bean>

    <bean id="dynamicDataSource" class="com.chinalife.springmvc.aspect.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="masterDataSource" value-ref="masterDataSource"/>
                <entry key="salveDataSource" value-ref="salveDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>

    <!-- 3:配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池-->
        <property name="dataSource" ref="dynamicDataSource"/>
        <!-- 配置myBatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatisConfig.xml"/>
        <!-- 扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="com.chinalife.springmvc.entity"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4:配置扫描dao接口包,动态实现dao接口,注入到spring容器中-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的dao接口包-->
        <property name="basePackage" value="com.chinalife.springmvc.dao"/>
    </bean>


    <!--配置事务管理器-->

    <bean id="transacationManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"></property>

    </bean>
    <tx:advice id="transactionAdvice" transaction-manager="transacationManager">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPoint" expression="execution(* com.chinalife.springmvc..*.service.*(..))"></aop:pointcut>
        <aop:advisor pointcut-ref="transactionPoint" advice-ref="transactionAdvice"></aop:advisor>
    </aop:config>

    <!-- aop advice
    <bean id = "dynamicDataSourceAdvice" class="com.chinalife.springmvc.aspect.DynamicDataSourceAdvice" />

    <aop:config>
        <aop:pointcut id="dynamicDataSourcePoint" expression="@annotation(com.chinalife.springmvc.annotation.DynamicDataSource)"/>
        <aop:aspect ref="dynamicDataSourceAdvice" order="1">
            <aop:before pointcut-ref="dynamicDataSourcePoint" method="before"/>
            <aop:after method="after" pointcut-ref="dynamicDataSourcePoint"/>
        </aop:aspect>
    </aop:config>
    -->

    <bean id="testAdvice" class="com.chinalife.springmvc.aspect.TestAspect"/>

    <aop:config>
        <aop:pointcut id="testPoint" expression="@annotation(com.chinalife.springmvc.annotation.DynamicDataSource)"/>
        <aop:aspect ref="testAdvice" order="1">
            <aop:before pointcut-ref="testPoint" method="before"/>
            <aop:after-returning  pointcut-ref="testPoint" method="after"/>
        </aop:aspect>
    </aop:config>
</beans>